@model Privont.Models.VendorInfo

@{
    ViewBag.Title = "Vendor Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>

    .ui-autocomplete {
        position: absolute;
        top: 100%;
        left: 0;
        z-index: 1100;
        float: left;
        display: none;
        min-width: 160px;
        _width: 160px;
        padding: 4px 0;
        margin: 2px 0 0 0;
        list-style: none;
        background-color: #ffffff;
        border-color: #ccc;
        border-color: rgba(0, 0, 0, 0.2);
        border-style: solid;
        border-width: 1px;
        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        border-radius: 5px;
        -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        -moz-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        -webkit-background-clip: padding-box;
        -moz-background-clip: padding;
        background-clip: padding-box;
        *border-right-width: 2px;
        *border-bottom-width: 2px;
        max-height: 200px;
        overflow-y: auto;
        /* prevent horizontal scrollbar */
        overflow-x: hidden;
    }

        .ui-autocomplete .ui-menu-item > a.ui-corner-all {
            display: block;
            padding: 3px 15px;
            clear: both;
            font-weight: normal;
            line-height: 18px;
            color: #555555;
            white-space: nowrap
        }

            .ui-autocomplete .ui-menu-item > a.ui-corner-all.ui-state-hover, .ui-autocomplete .ui-menu-item > a.ui-corner-all.ui-state-active {
                color: #ffffff;
                text-decoration: none;
                background-color: #0088cc;
                border-radius: 0px;
                -webkit-border-radius: 0px;
                -moz-border-radius: 0px;
                background-image: none
            }
</style>

@using (Html.BeginForm("Create", "VendorInfo", FormMethod.Post, new { }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.VendorID)
    <div class="content-wrapper">
        <div class="container-full">
            <!-- Content Header (Page header) -->
            <!-- Main content -->
            <section class="content">

                <div class="row">
                    <div class="col-lg-2 col-12"></div>
                    <div class="col-lg-8 col-12">
                        <div class="box">
                            <div class="box-header with-border">
                                <h4 class="box-title">Vendor <small>(@((Model.VendorID == 0 ? "New" : "Edit")))</small></h4>
                            </div>
                            <!-- /.box-header -->
                            <form class="form">
                                <div class="box-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.Label("Vendor Name", htmlAttributes: new { @class = "control-label" })<span class="text-danger">*</span>
                                                @Html.EditorFor(model => model.VendorName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.Label("Registration No", htmlAttributes: new { @class = "control-label" })<span class="text-danger">*</span>
                                                @Html.EditorFor(model => model.RegistrationNo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.RegistrationNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <hr style="border-top:2px solid black;width:80%;margin:auto;" />
                                    <br />
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.Label("Email address", htmlAttributes: new { @class = "form-label" })<span class="text-danger">*</span>
                                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.Label("Contact No 1", htmlAttributes: new { @class = "form-label" })<span class="text-danger">*</span>
                                                @Html.EditorFor(model => model.Contact1, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                                                @Html.ValidationMessageFor(model => model.Contact1, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.Label("Contact No 2", htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.Contact2, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Contact2, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.Label("Office No", htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.OfficeNo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.OfficeNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="form-group">
                                                @Html.Label("Zip Code", htmlAttributes: new { @class = "form-label" })
                                                <input type="text" class="form-control" id="ZipCode" name="ZipCode">
                                                @Html.EditorFor(model => model.ZipCodeID, new { htmlAttributes = new { @class = "form-control", @type = "number", style = "display:none;" } })
                                                @*<input type="text" class="form-control" id="txtcode" name="txtcode">*@
                                                @Html.ValidationMessageFor(model => model.ZipCodeID, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.Label("Website", htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.Label("Street No", htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.StreetNo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.StreetNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.Label("Street Name", htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <hr style="border-top:2px solid black;width:80%;margin:auto;" />
                                    <br />
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.Label("Remarks", htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- /.box-body -->
                                <div class="box-footer pull-right">
                                    <button type="submit" class="m-1 btn btn-primary pull-right">
                                        @((Model.VendorID == 0 ? "Save" : "Update"))
                                    </button>
                                    <button onclick="window.location.href='/VendorInfo/Index'" type="button" class="m-1 btn btn-warning pull-right me-1">
                                        Back
                                    </button>
                                </div>
                            </form>
                        </div>
                        <!-- /.box -->
                    </div>
                    <div class="col-lg-2 col-12"></div>
                </div>

                <!-- /.row -->
            </section>
            <!-- /.content -->
        </div>
    </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script>

    $(document).ready(function () {
        // Find the <a> element with href="#finish"
        $('a[href="#finish"]').click(function (event) {
            console.log("Link with href='#finish' clicked!");
            $("#btnfinished").click();
            // You can perform additional actions here
        });
                $("#ZipCode").val(@Model.ZipCode);
    });
    $('a[href="#finish"]').click(function (event) {
        console.log("Link with href='#finish' clicked!");
        $("#btnfinished").click();
        // You can perform additional actions here
    });
    $("#ZipCode").autocomplete({
        source: function (request, response) {
            // Fetch data
            $.ajax({
                url: "/RealEstateAgentInfo/GetZipCode",
                type: 'post',
                dataType: "json",
                async: true,
                data: {

                    ProductTitle: request.term
                },
                success: function (data) {
                    //alert(JSON.stringify(data));
                    response($.map(data, function (item) {
                        return { label: item.label, value: item.value };
                    }))
                }
            });
        },
        select: function (event, ui) {
            // Set selection
            //alert(ui.item.label); // display the selected text
            //alert(ui.item.value); // save selected id to input
            //Add to table
            $("#ZipCode").val(ui.item.label);
            $("#ZipCodeID").val(ui.item.value);
            return false;
        },
        focus: function (event, ui) {
            // alert("Focus" + ui.item.ProductID);
            //alert("Focus" + ui.item.label + "-" + ui.item.value);

            return false;
        },
    }).keyup(function (e) {
        if (e.which === 13) {
            $(".ui-menu-item").hide();
        }
    });
</script>